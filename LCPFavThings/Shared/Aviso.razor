@using static LCPFavThings.Components.Services.Notifications.ToastLevelCL
@if (Exibir)
{
    <div aria-live="polite" aria-atomic="true" class="position-relative">
        <div class="toast-container top-0 end-0 p-3">
            <div class="toast align-items-center text-bg-@bgColor border-0 @(Exibir ? "show" : "hidden")" role="alert" aria-live="assertive" aria-atomic="true">
                @*<div class="toast-header">
                    <strong class="me-auto">Notification</strong>
                </div>*@
                <div class="d-flex">
                    <div class="toast-body">
                        @ChildContent
                    </div>
                    <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                </div>
            </div>
        </div>
    </div>

    @*<div class="position-relative">
        <div class="alert alert-primary mt-4" role="alert">
            @ChildContent
        </div>
    </div>*@
}

@code {
    [Parameter] public bool Exibir { get; set; }

    [Parameter] public ToastLevel ToastLevel { get; set; } = ToastLevel.Info;

    [Parameter] public RenderFragment ChildContent { get; set; }

    private string bgColor { get; set; }

    protected override Task OnInitializedAsync()
    {
        LoadBGColor();
        return base.OnInitializedAsync();
    }

    private void LoadBGColor() 
    {
        bgColor = ToastLevel switch
        {
            ToastLevel.Info => "primary",
            ToastLevel.Warning => "warning",
            ToastLevel.Error => "danger",
            ToastLevel.Success => "success",
            _ => "primary"
        };
    }
}